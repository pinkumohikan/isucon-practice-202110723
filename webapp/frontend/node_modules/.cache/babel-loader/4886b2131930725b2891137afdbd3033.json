{"remainingRequest":"/opt/frontend/node_modules/thread-loader/dist/cjs.js!/opt/frontend/node_modules/babel-loader/lib/index.js!/opt/frontend/node_modules/eslint-loader/index.js??ref--13-0!/opt/frontend/src/services/api.js","dependencies":[{"path":"/opt/frontend/src/services/api.js","mtime":1621475513321},{"path":"/opt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/opt/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/opt/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport { httpService, HttpService } from \"./http.js\";\nimport moment from 'moment';\n\nvar ApiService =\n/*#__PURE__*/\nfunction () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n\n    this.httpService = httpService;\n    this.stations = [];\n  } // ログイン状態\n\n\n  _createClass(ApiService, [{\n    key: \"getAuth\",\n    value: function () {\n      var _getAuth = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.httpService.get('/api/auth');\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAuth() {\n        return _getAuth.apply(this, arguments);\n      }\n\n      return getAuth;\n    }() // ログアウト\n\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.httpService.post('/api/auth/logout');\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }() // 列車検索\n\n  }, {\n    key: \"getTrains\",\n    value: function () {\n      var _getTrains = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(condition) {\n        var date, params;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                date = new Date(condition.year, condition.month - 1, condition.day, condition.hour, condition.minute, 0);\n                console.log(date.toISOString());\n                params = {\n                  use_at: moment(date).toISOString(),\n                  from: condition.from_station,\n                  to: condition.to_station,\n                  train_class: condition.train_class,\n                  adult: condition.adult,\n                  child: condition.child\n                };\n                _context3.next = 5;\n                return this.httpService.get('/api/train/search', {\n                  \"params\": params\n                });\n\n              case 5:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getTrains(_x) {\n        return _getTrains.apply(this, arguments);\n      }\n\n      return getTrains;\n    }() //座席検索\n\n  }, {\n    key: \"getSeats\",\n    value: function () {\n      var _getSeats = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(condition) {\n        var date, params;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                date = new Date(condition.year, condition.month - 1, condition.day);\n                params = {\n                  date: moment(date).toISOString(),\n                  from: condition.from_station,\n                  to: condition.to_station,\n                  train_class: condition.train_class,\n                  train_name: condition.train_name,\n                  car_number: condition.car_number\n                };\n                _context4.next = 4;\n                return this.httpService.get('/api/train/seats', {\n                  \"params\": params\n                });\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getSeats(_x2) {\n        return _getSeats.apply(this, arguments);\n      }\n\n      return getSeats;\n    }()\n  }, {\n    key: \"getStations\",\n    value: function () {\n      var _getStations = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var self;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                self = this;\n\n                if (!(this.stations.length > 0)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                console.log(\"using cache\");\n                return _context5.abrupt(\"return\", this.stations);\n\n              case 4:\n                _context5.next = 6;\n                return this.httpService.get('/api/stations').then(function (stations) {\n                  self.stations = stations;\n                  return self.stations;\n                });\n\n              case 6:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getStations() {\n        return _getStations.apply(this, arguments);\n      }\n\n      return getStations;\n    }()\n  }, {\n    key: \"getStation\",\n    value: function getStation(id) {\n      var ret = {\n        \"name\": \"\"\n      };\n      this.stations.forEach(function (value) {\n        if (value.id == id) {\n          ret = value;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(data) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.httpService.post('/api/auth/signup', data).then(function (res) {\n                  return res;\n                });\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function register(_x3) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(data) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.httpService.post('/api/auth/login', data).then(function (res) {\n                  return res;\n                });\n\n              case 2:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function login(_x4) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"reserve\",\n    value: function () {\n      var _reserve = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(condition) {\n        var date, request;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                date = new Date(condition.year, condition.month - 1, condition.day);\n                request = {\n                  date: moment(date).toISOString(),\n                  train_class: condition.train_class,\n                  train_name: condition.train_name,\n                  car_number: condition.car_number,\n                  seat_class: condition.seat_class,\n                  departure: condition.from_station,\n                  arrival: condition.to_station,\n                  child: condition.child,\n                  adult: condition.adult,\n                  column: condition.column,\n                  seats: condition.seats\n                };\n                _context8.next = 4;\n                return this.httpService.post('/api/train/reserve', request).then(function (resp) {\n                  return resp;\n                });\n\n              case 4:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function reserve(_x5) {\n        return _reserve.apply(this, arguments);\n      }\n\n      return reserve;\n    }()\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(data) {\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.httpService.post('/api/train/reservation/commit', data).then(function (resp) {\n                  return resp;\n                });\n\n              case 2:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function commit(_x6) {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"getReservations\",\n    value: function () {\n      var _getReservations = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.httpService.get('/api/user/reservations');\n\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getReservations() {\n        return _getReservations.apply(this, arguments);\n      }\n\n      return getReservations;\n    }()\n  }, {\n    key: \"getReservation\",\n    value: function () {\n      var _getReservation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(reservationId) {\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.httpService.get('/api/user/reservations/' + reservationId);\n\n              case 2:\n                return _context11.abrupt(\"return\", _context11.sent);\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getReservation(_x7) {\n        return _getReservation.apply(this, arguments);\n      }\n\n      return getReservation;\n    }()\n  }, {\n    key: \"cancelReservation\",\n    value: function () {\n      var _cancelReservation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(id) {\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.httpService.post('/api/user/reservations/' + id + \"/cancel\");\n\n              case 2:\n                return _context12.abrupt(\"return\", _context12.sent);\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function cancelReservation(_x8) {\n        return _cancelReservation.apply(this, arguments);\n      }\n\n      return cancelReservation;\n    }()\n  }, {\n    key: \"tokenizeCard\",\n    value: function () {\n      var _tokenizeCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(data) {\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = {\n                  card_information: data\n                  /*\n                  data =\n                  {\n                      card_number: \"12345678\",\n                      cvv: \"123\",\n                      expiry_date: \"12/22\"\n                  }\n                  */\n\n                };\n                _context13.next = 3;\n                return this.httpService.get('/api/settings').then(function (res) {\n                  var paymentService = new HttpService(res.payment_api);\n                  return paymentService.post('/card', data).then(function (res) {\n                    return res;\n                  });\n                });\n\n              case 3:\n                return _context13.abrupt(\"return\", _context13.sent);\n\n              case 4:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function tokenizeCard(_x9) {\n        return _tokenizeCard.apply(this, arguments);\n      }\n\n      return tokenizeCard;\n    }()\n  }]);\n\n  return ApiService;\n}();\n\nexport var apiService = new ApiService();",null]}