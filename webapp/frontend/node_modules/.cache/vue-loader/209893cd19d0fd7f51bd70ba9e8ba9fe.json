{"remainingRequest":"/opt/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/frontend/src/views/Trains.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/frontend/src/views/Trains.vue","mtime":1621475513321},{"path":"/opt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Router from '@/router.js'\nimport TrainItem from '@/components/Trains/TrainItem.vue'\nimport { apiService } from '../services/api.js'\n\nexport default {\n  data: function() {\n    return {\n      year: null,\n      month: null,\n      day: null,\n      hour: null,\n      minute: null,\n      train_class: \"\",\n      from_station: \"\",\n      to_station: \"\",\n      adult: null,\n      child: null,\n      position: \"\",\n      selectedItem: null,\n      seat_class: \"\",\n      is_smoking_seat: false,\n      items: null,\n    }\n  },\n  components: {TrainItem},\n  computed: {\n    itemCount () {\n      return this.items.length;\n    },\n    condition () {\n      return {\n        year: this.year,\n        month: this.month,\n        day: this.day,\n        hour: this.hour,\n        minute: this.minute,\n        train_class: this.train_class,\n        from_station: this.from_station,\n        to_station: this.to_station,\n        adult: this.adult,\n        child: this.child,\n      }\n    },\n    canSelectSeat () {\n      if (this.seat_class == \"\" || this.seat_class == \"non-reserved\") {\n        return false\n      }\n      return true\n    },\n    columnChoices () {\n      if (this.seat_class == \"premium\") {\n        return [\n          {name: \"指定しない\", value:\"\"},\n          {name: \"窓　側 (A)\", value:\"A\"},\n          {name: \"通路側 (B)\", value:\"B\"},\n          {name: \"通路側 (C)\", value:\"C\"},\n          {name: \"窓　側 (D)\", value:\"D\"},\n        ]\n      }\n      if (this.seat_class == \"reserved\") {\n        return [\n          {name: \"指定しない\", value:\"\"},\n          {name: \"窓　側 (A)\", value:\"A\"},\n          {name: \"中　央 (B)\", value:\"B\"},\n          {name: \"通路側 (C)\", value:\"C\"},\n          {name: \"通路側 (D)\", value:\"D\"},\n          {name: \"窓　側 (E)\", value:\"E\"},\n        ]\n      }\n      return []\n    },\n    position_display () {\n      if (this.position == \"\") {\n        return \"指定しない\"\n      }\n\n      if (this.seat_class == \"premium\") {\n        var m = {\n          A: \"窓　側 (A)\",\n          B: \"通路側 (B)\",\n          C: \"通路側 (C)\",\n          D: \"窓　側 (D)\",\n        }\n        return m[this.position]\n      }\n      if (this.seat_class == \"reserved\") {\n        var m = {\n          A: \"窓　側 (A)\",\n          B: \"中　央 (B)\",\n          C: \"通路側 (C)\",\n          D: \"通路側 (D)\",\n          E: \"窓　側 (E)\",\n        }\n        return m[this.position]\n      }\n      return \"\"\n    }\n  },\n  methods: {\n    unselect() {\n      this.selectedItem = null;\n    },\n    select(item) {\n      this.selectedItem = item;\n    },\n    search() {\n      apiService.getTrains(this.condition).then((res) => {\n        console.log(res)\n        var items = []\n\n        res.forEach(function(value){\n          value[\"departure\"] = value[\"departure\"]\n          value[\"arrival\"] = value[\"arrival\"]\n          value[\"departure_time\"] = new Date(\"2000-01-01 \" + value[\"departure_time\"])\n          value[\"arrival_time\"] = new Date(\"2000-01-01 \" + value[\"arrival_time\"])\n          items.push(value)\n        });\n\n        this.items = items\n      })\n    },\n    selectSeatClass(seat_class, is_smoking_seat) {\n      this.seat_class = seat_class\n      this.is_smoking_seat = is_smoking_seat\n    },\n    selectSeat() {\n      var query = {\n        year: this.year,\n        month: this.month,\n        day: this.day,\n        train_class: this.selectedItem.train_class,\n        train_name: this.selectedItem.train_name,\n        car_number: 4,\n        from_station: this.from_station,\n        to_station: this.to_station,\n        adult: this.adult,\n        child: this.child,\n        seat_class: this.seat_class\n      }\n      if(this.seat_class!=\"\"){\n        Router.push({ path: '/reservation/seats', query: query})\n      }\n    },\n    reserve() {\n      if (this.seat_class == \"\") {\n        return\n      }\n      var condition = {\n        year: this.year,\n        month: this.month,\n        day: this.day,\n        train_class: this.selectedItem.train_class,\n        train_name: this.selectedItem.train_name,\n        car_number: 0,\n        from_station: this.from_station,\n        to_station: this.to_station,\n        adult: this.adult,\n        child: this.child,\n        seat_class: this.seat_class,\n        is_smoking_seat: this.is_smoking_seat,\n        column: this.position,\n        seats: [],\n      }\n\n      apiService.reserve(condition).then((res) => {\n        var query = {\n          reservation_id: res.reservation_id,\n        }\n        Router.push({ path: '/reservation/payment', query: query})\n      })\n    }\n  },\n  mounted() {\n    this.year = this.$route.query.year\n    this.month = this.$route.query.month\n    this.day = this.$route.query.day\n    this.hour = this.$route.query.hour\n    this.minute = this.$route.query.minute\n    this.train_class = this.$route.query.train_class\n    this.adult = parseInt(this.$route.query.adult)\n    this.child = parseInt(this.$route.query.child)\n    this.from_station = this.$route.query.from_station\n    this.to_station = this.$route.query.to_station\n\n    return this.search();\n  }\n}\n",null]}